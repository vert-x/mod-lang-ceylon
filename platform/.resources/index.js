var index = [
{'name': 'io.vertx.ceylon.platform', 'type': 'package', 'url': 'index.html#section-package', 'doc': '', 'tags': [],'icons': ['icon-package']},
{'name': 'MainAnnotation', 'type': 'class', 'url': 'MainAnnotation.type.html', 'doc': '<p>The annotation class for <a class=\'link\' href=\'index.html#main\' title=\'Go to io.vertx.ceylon.platform::main\'>main</a>.</p>\n', 'tags': [],'icons': ['icon-class', 'icon-decoration-annotation']},
{'name': 'main', 'type': 'function', 'url': 'index.html#main', 'doc': '<p>.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-annotation']},
{'name': 'logger.category', 'type': 'attribute', 'url': 'Container.logger.object.html#category', 'doc': '<p>The <span class=\'link-unresolvable\'>[topic|topic|Category]</span> to which log messages sent by\nthis <code>Logger</code> relate.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'logger.log', 'type': 'function', 'url': 'Container.logger.object.html#log', 'doc': '<p>Send a log <span class=\'link-unresolvable\'>[message]</span> with the given <span class=\'link-unresolvable\'>[priority]</span>.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'logger.priority', 'type': 'attribute', 'url': 'Container.logger.object.html#priority', 'doc': '<p>The current priority of this <code>Logger</code>.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl', 'icon-decoration-variable']},
{'name': 'logger', 'type': 'object', 'url': 'Container.logger.object.html', 'doc': '<p>The verticle logger</p>\n', 'tags': [],'icons': ['icon-object']},
{'name': 'Container.logger', 'type': 'value', 'url': 'Container.type.html#logger', 'doc': '<p>The verticle logger</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'env.clone', 'type': 'function', 'url': 'Container.env.object.html#clone', 'doc': '<p>A shallow copy of this collection, that is, a\ncollection with identical elements which does not\nchange if this…</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'env.defines', 'type': 'function', 'url': 'Container.env.object.html#defines', 'doc': '<p>Determines if there is a value defined for the given\nkey.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'env.get', 'type': 'function', 'url': 'Container.env.object.html#get', 'doc': '<p>Returns the value defined for the given key, or <code>null</code>\nif there is no value defined for the given key.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'env.iterator', 'type': 'function', 'url': 'Container.env.object.html#iterator', 'doc': '<p>An iterator for the elements belonging to this stream.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'env.equals', 'type': 'function', 'url': 'Container.env.object.html#equals', 'doc': '<p>Determine if two values are equal.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'env.hash', 'type': 'attribute', 'url': 'Container.env.object.html#hash', 'doc': '<p>The hash value of the value, which allows the value to\nbe an element of a hash-based set or key of a\nhash-based map.</p>\n', 'tags': [],'icons': ['icon-shared-member', 'icon-decoration-impl']},
{'name': 'env', 'type': 'object', 'url': 'Container.env.object.html', 'doc': '<p>Get an unmodifiable map of system, environment variables.</p>\n', 'tags': [],'icons': ['icon-object']},
{'name': 'Container.env', 'type': 'value', 'url': 'Container.type.html#env', 'doc': '<p>Get an unmodifiable map of system, environment variables.</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.config', 'type': 'value', 'url': 'Container.type.html#config', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.exit', 'type': 'function', 'url': 'Container.type.html#exit', 'doc': '<p>Cause the container to exit</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.deployWorkerVerticle', 'type': 'function', 'url': 'Container.type.html#deployWorkerVerticle', 'doc': '<p>Deploy a worker verticle programmatically.</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.deployModule', 'type': 'function', 'url': 'Container.type.html#deployModule', 'doc': '<p>Deploy a module programmatically.</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.deployVerticle', 'type': 'function', 'url': 'Container.type.html#deployVerticle', 'doc': '<p>Deploy a verticle programmatically.</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.undeployVerticle', 'type': 'function', 'url': 'Container.type.html#undeployVerticle', 'doc': '<p>Undeploy a verticle</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container.undeployModule', 'type': 'function', 'url': 'Container.type.html#undeployModule', 'doc': '<p>Undeploy a module</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Container', 'type': 'class', 'url': 'Container.type.html', 'doc': '<p>This class represents a Verticle\'s view of the container in which it is running.</p>\n', 'tags': [],'icons': ['icon-class']},
{'name': 'findVerticles', 'type': 'function', 'url': 'index.html#findVerticles', 'doc': '<p>Find the verticles for the specified module and return a list of verticle factories.</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Platform.deploy', 'type': 'function', 'url': 'Platform.type.html#deploy', 'doc': '<p>Deploy a module.</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Platform.undeploy', 'type': 'function', 'url': 'Platform.type.html#undeploy', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Platform.vertx', 'type': 'value', 'url': 'Platform.type.html#vertx', 'doc': '<p>The Vertx instance used by the platform manager</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Platform.stop', 'type': 'function', 'url': 'Platform.type.html#stop', 'doc': '<p>Stop the platform manager</p>\n', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Platform', 'type': 'class', 'url': 'Platform.type.html', 'doc': '<p>Represents the Vert.x platform.</p>\n', 'tags': [],'icons': ['icon-class']},
{'name': 'run', 'type': 'function', 'url': 'index.html#run', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.asyncStart', 'type': 'function', 'url': 'Verticle.type.html#asyncStart', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.start', 'type': 'function', 'url': 'Verticle.type.html#start', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle.stop', 'type': 'function', 'url': 'Verticle.type.html#stop', 'doc': '', 'tags': [],'icons': ['icon-shared-member']},
{'name': 'Verticle', 'type': 'class', 'url': 'Verticle.type.html', 'doc': '<p>A verticle is the unit of execution in the Vert.x platform\nVert.x code is packaged into Verticle\'s and then deployed…</p>\n', 'tags': [],'icons': ['icon-class', 'icon-decoration-abstract']},
{'name': 'io.vertx.ceylon.platform', 'type': 'module', 'url': 'index.html', 'doc': '<h1>Writing Verticles</h1>\n<p>As was described in the <a href="http://vertx.io/manual.html#verticle">main manual</a>, a verticle is the…</p>\n', 'tags': [],'icons': []}];
var tagIndex = [
];
